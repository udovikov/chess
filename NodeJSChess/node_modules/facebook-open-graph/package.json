{
  "author": {
    "name": "Jesse Ditson",
    "email": "jesse.ditson@gmail.com"
  },
  "name": "facebook-open-graph",
  "description": "Open graph actions made easier",
  "version": "0.1.0",
  "homepage": "https://github.com/jesseditson/node-facebook-open-graph",
  "repository": {
    "type": "git",
    "url": "git://github.com/jesseditson/node-facebook-open-graph.git"
  },
  "main": "opengraph.js",
  "engines": {
    "node": "0.6.x"
  },
  "dependencies": {
    "request": "~2.9.202"
  },
  "devDependencies": {},
  "optionalDependencies": {},
  "readme": "node-facebook-open-graph\n========================\n\nRidiculously simple facebook open graph caller.\n\n\n## Usage:\n\nFirst:\n\n    npm install facebook-open-graph\n\nThen:\n\n    var OpenGraph = require('facebook-open-graph'),\n        openGraph = new OpenGraph('fb_app_namespace')\n\nAfter that:\n\n**show actions:**\n\n    openGraph.show('some-user-id','some-access-token','action',function(err,response){\n      // do stuff\n    })\n\n**publish action:**\n\n    // enable fb:explicitly_shared\n    var options = true;\n\n    // ... or pass your own custom headers\n    options = {\n      'fb:explicitly_shared': true\n    };\n\n    // the options parameter may be omitted if you have nothing to put in there\n    openGraph.publish('some-user-id','some-access-token','action','object','some-object-url',options,function(err,response){\n      // do stuff\n    })\n\n**delete action:**\n\n    openGraph.delete('some-access-token','some-action-id',function(err,response){\n      // do stuff\n    })\n\nIn all of the above, `err` is a native javascript error or `null`, and response is a native javascript `object` (parsed response from FB). \n\nYou can use 'me' instead of a user, and provide their access token to publish to their own feed. Otherwise, provide an id, and either the users' access token or an app access token with the correct permissions.\n\n** Common Actions **\n\nSome facebook actions are \"common\", in that you'll need to use them instead of custom actions. These mostly are pretty specific, but this library currently supports the main two common actions:\n\n** Like **\n\n    openGraph.publish('some-user-id','some-access-token','like','<whatever>','url',function(err,response){\n      // stuff\n    })\n\n** Follow **\n\n    openGraph.publish('some-user-id','some-access-token','follow','<whatever>','url',function(err,response){\n      stuff\n    })\n\nThe main difference for common actions is that they are not namespaced - these actions will be transformed to `og.likes` and `og.follows`, and instead of specifying an object name, the name is ignored and the url is sent instead.\nThrough this library, usage can be identical to your custom actions, so that should make things easier.\n\n## Support for fb:explicitly_shared\n\nSending explicitly_shared indicates that a user has explicitly chosen to have their action posted to their Facebook wall, giving it a more prominent position.\n\nFor more on this, see [How-To: Explicit Sharing](https://developers.facebook.com/docs/technical-guides/opengraph/explicit-sharing/)\n\n## Bonus:\n\nDon't like using the word \"publish\" or whatever? Do what you want, homie:\n\n    openGraph.alias('publish','BIRTH')\n    openGraph.alias('delete','MURDER')\n\nNow you can:\n\n    openGraph.BIRTH('some-users-access-token','action','object','some-object-url',function(err,response){\n      // whatever\n    })\n    openGraph.MURDER('some-users-access-token','some-action-id',function(err,response){\n      // yeah, killed the fucker\n    })\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/jesseditson/node-facebook-open-graph/issues"
  },
  "_id": "facebook-open-graph@0.1.0",
  "dist": {
    "shasum": "48e93d4ee91754d2d5e95771a49f78b23ba118a4"
  },
  "_from": "facebook-open-graph@",
  "_resolved": "https://registry.npmjs.org/facebook-open-graph/-/facebook-open-graph-0.1.0.tgz"
}
